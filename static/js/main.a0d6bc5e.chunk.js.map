{"version":3,"sources":["index.js"],"names":["Application","props","fileChangedHandler","event","setState","selectedFile","target","files","reader","FileReader","onloadend","imagePreviewUrl","result","readAsDataURL","onSubmit","preventDefault","username","value","caption","info","src","state","alt","width","data","this","className","type","placeholder","ref","input","onChange","map","index","Card","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"mOAGMA,G,wDAEF,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAMRC,mBAAqB,SAAAC,GACjB,EAAKC,SAAS,CACZC,aAAcF,EAAMG,OAAOC,MAAM,KAGnC,IAAIC,EAAS,IAAIC,WAEjBD,EAAOE,UAAY,WACjB,EAAKN,SAAS,CACZO,gBAAiBH,EAAOI,UAI5BJ,EAAOK,cAAcV,EAAMG,OAAOC,MAAM,KApBzB,EAuBnBO,SAAW,SAAAX,GACTA,EAAMY,iBACN,IAAMC,EAAW,EAAKA,SAASC,MACzBC,EAAU,EAAKA,QAAQD,MAEvBE,GADkB,EAAKR,gBAAgBM,MAChC,CAACD,SAAUA,EAAUE,QAASA,EAASP,gBAAgB,yBAAKS,IAAK,EAAKC,MAAMV,gBAAiBW,IAAI,OAAOC,MAAM,UACrHC,EAAI,sBAAO,EAAKH,MAAMG,MAAlB,CAAwBL,IAClC,EAAKf,SAAS,CACZoB,KAAMA,KA7BR,EAAKH,MAAQ,CACXG,KAAK,IAHU,E,qDAmCT,IAAD,OAKP,OAHEC,KAAKJ,MAAMV,iBACI,yBAAKe,UAAU,mBAAmB,yBAAKN,IAAKK,KAAKJ,MAAMV,gBAAiBW,IAAI,OAAOC,MAAM,QAAzF,KAGb,yBAAKG,UAAU,aACb,uEAEA,6BAEA,yBAAKA,UAAU,OACb,0BAAMA,UAAU,cAAcZ,SAAUW,KAAKX,UAC3C,2BACIa,KAAK,OACLD,UAAU,oCACVE,YAAY,WACZC,IAAK,SAAAC,GAAK,OAAI,EAAKd,SAAWc,KAClC,yBAAKJ,UAAU,oCACb,2BACIC,KAAK,OACLD,UAAU,eACVE,YAAY,UACZC,IAAK,SAAAC,GAAK,OAAI,EAAKZ,QAAUY,MAEnC,2BACMH,KAAK,OACLD,UAAU,eACVE,YAAY,OACZG,SAAUN,KAAKvB,mBACf2B,IAAK,SAAAC,GAAK,OAAI,EAAKnB,gBAAkBmB,KAE3C,4BAAQH,KAAK,SAASD,UAAU,mBAAhC,UAKJ,6BAEA,yBAAKA,UAAU,OAEXD,KAAKJ,MAAMG,KAAKQ,KAAI,SAACb,EAAMc,GAAP,OAAiB,kBAACC,EAAD,CAAMC,IAAKF,EAAOd,KAAMA,a,GA9EnDiB,IAAMC,YAuFxBH,EAAO,SAAAjC,GAAK,OACd,yBAAKyB,UAAU,qBACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,uBAAGA,UAAU,cAAa,4CAAwBzB,EAAMkB,KAAKH,SAA7D,KACA,uBAAGU,UAAU,aACX,mCAAezB,EAAMkB,KAAKR,gBAC5B,uBAAGe,UAAU,aACX,2CAAuBzB,EAAMkB,KAAKD,cAO9CoB,IAASC,OACL,kBAACvC,EAAD,MACAwC,SAASC,eAAe,W","file":"static/js/main.a0d6bc5e.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './main.css'\r\nclass Application extends React.Component {\r\n\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        data:[],\r\n      }\r\n    }\r\n    \r\n    fileChangedHandler = event => {\r\n        this.setState({\r\n          selectedFile: event.target.files[0]\r\n        })\r\n\r\n        let reader = new FileReader();\r\n     \r\n        reader.onloadend = () => {\r\n          this.setState({\r\n            imagePreviewUrl: reader.result\r\n          });\r\n        }\r\n     \r\n        reader.readAsDataURL(event.target.files[0])\r\n     \r\n      }   \r\n    onSubmit = event => {\r\n      event.preventDefault();\r\n      const username = this.username.value;\r\n      const caption = this.caption.value;\r\n      const imagePreviewUrl = this.imagePreviewUrl.value;\r\n      const info = {username: username, caption: caption, imagePreviewUrl:<img src={this.state.imagePreviewUrl} alt=\"icon\" width=\"600\" />  };\r\n      const data = [...this.state.data, info];\r\n      this.setState({\r\n        data: data\r\n      });\r\n    };\r\n  \r\n    render() {\r\n        let $imagePreview = (<div className=\"previewText image-container\"></div>);\r\n    if (this.state.imagePreviewUrl) {\r\n      $imagePreview = (<div className=\"image-container\" ><img src={this.state.imagePreviewUrl} alt=\"icon\" width=\"500\" /> </div>);\r\n    }\r\n      return (\r\n          <div className=\"container\">\r\n            <h1>Post your images with a quirky caption!</h1>\r\n  \r\n            <hr/>\r\n  \r\n            <div className=\"row\">\r\n              <form className=\"form-inline\" onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control mb-2 mr-sm-2 mb-sm-0\"\r\n                    placeholder=\"Username\"\r\n                    ref={input => this.username = input}/>\r\n                <div className=\"input-group mb-2 mr-sm-2 mb-sm-0\">\r\n                  <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"caption\"\r\n                      ref={input => this.caption = input}/>\r\n                </div>\r\n                <input\r\n                      type=\"file\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"post\"\r\n                      onChange={this.fileChangedHandler}\r\n                      ref={input => this.imagePreviewUrl = input}/>\r\n                      \r\n                <button type=\"submit\" className=\"btn btn-primary\">Save</button>\r\n                \r\n              </form>\r\n            </div>\r\n  \r\n            <hr/>\r\n  \r\n            <div className=\"row\">\r\n              {\r\n                this.state.data.map((info, index) => <Card key={index} info={info}/>)\r\n              }\r\n            </div>\r\n  \r\n          </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  const Card = props =>\r\n      <div className=\"col-md-6 col-lg-3\">\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-body\">\r\n            <p className=\"card-title\"><span>Username: </span>{props.info.username} </p>\r\n            <p className=\"card-text\">\r\n              <span> </span>{props.info.imagePreviewUrl}\r\n            <p className=\"card-post\">\r\n              <span>caption: </span>{props.info.caption}</p>\r\n              \r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>;\r\n  \r\n  ReactDOM.render(\r\n      <Application/>,\r\n      document.getElementById('root')\r\n  );"],"sourceRoot":""}